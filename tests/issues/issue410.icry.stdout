Loading module Cryptol
{a, b} (Logic b) => a == min (1 + a) a
{a, b} (Logic b) => Logic b
{a, b} (Logic b) => Logic b
{a, b} (Logic b) => True
(s
 where
   s x =
       (bs
        where
          bs = [complement b | b <- [complement x] # bs
                             | _ <- bs]
        )
 ) : {a, b} (Logic b) => b -> [a]b
{a, b} a == a
(bs
 where
   bs = [b | b <- bs]
 ) : {a, b} [a]b
1 == 1
[b | b <- [True]] : [1]
