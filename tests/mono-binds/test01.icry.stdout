Loading module Cryptol
Loading module Cryptol
Loading module test01
module test01
import Cryptol
/* Not recursive */
test01::a : {a, b} (fin a) => [a]b -> [2 * a]b
test01::a = \{a, b} (fin a) (x : [a]b) ->
            test01::f a x
            where
              /* Not recursive */
              test01::f : {c} [c]b -> [a + c]b
              test01::f = \{c} (y : [c]b) -> (Cryptol::#) a c b <> x y
              
            

Loading module Cryptol
Loading module test01
module test01
import Cryptol
/* Not recursive */
test01::a : {a, b} (fin a) => [a]b -> [2 * a]b
test01::a = \{a, b} (fin a) (x : [a]b) ->
            test01::f x
            where
              /* Not recursive */
              test01::f : [a]b -> [2 * a]b
              test01::f = \ (y : [a]b) -> (Cryptol::#) a a b <> x y
              
            

