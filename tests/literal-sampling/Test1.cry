module Test1 where

f : {n} [n] -> Bit
f x = True

test : {n} (n < 10) => [n] -> Bit
test xs = True

test1 : {n} (n == 0) => [n] -> Bit
test1 _ = True

test2 : {n} (n >= 2) => [n] -> Bit
test2 _ = True

test3 : {n} (n <= 2) => [n] -> Bit
test3 _ = True

test4 : {n, m} (n == m + 2) => [n] -> [m] -> Bit
test4 _ _ = True

test5 : {n, m} (n == m + 2, n == 2*m) => [n] -> [m] -> Bit
test5 _ _ = True

test6 : {n, m} (m + n == 10) => [n] -> [m] -> Bit
test6 _ _ = True

test7 : {n, m, l} (m + n + l == 10) => [n] -> [m] -> [l] -> Bit
test7 _ _ _ = True

test8 : {n, m, l} (m + n + l == 10, m >= 2) => [n] -> [m] -> [l] -> Bit
test8 _ _ _ = True

test9 : {n} (n^^2 == 8) => [n] -> Bit
test9 _ = True

test10 : {n1, n2, n3} (n1 + n2 + n3 <= 10) => [n1] -> [n2] -> [n3] -> Bit
test10 _ _ _ = True